# # –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è ISP (Interface Segregation Principle)
# # –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —É —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Document:
# from abc import ABC, abstractmethod


# class Document(ABC):
#     @abstractmethod
#     def print(self): ...

#     @abstractmethod
#     def scan(self): ...

#     @abstractmethod
#     def fax(self): ...


# # –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è ISP (Interface Segregation Principle)
# # –ü—Ä–µ–¥—Å—Ç–∞–≤—å OldPrinter, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—á–∞—Ç–∞—Ç—å.
# class Printable(ABC):
#     @abstractmethod
#     def print(self): ...


# class Scanable(ABC):
#     @abstractmethod
#     def scan(self): ...


# class Faxable(ABC):
#     @abstractmethod
#     def fax(self): ...


# class OldPrinter(Printable):
#     def print(self):
#         print("Printing document...")


# class SmartPrinter(Printable, Scanable, Faxable):
#     def print(self):
#         print("Printing...")

#     def scan(self):
#         print("Scanning...")

#     def fax(self):
#         print("Faxing...")
# ==============================================================================
# # üî¥ –ó–∞–¥–∞—á–∞: –ß—Ç–æ –Ω–µ —Ç–∞–∫?
# from abc import ABC, abstractmethod


# class Worker(ABC):
#     @abstractmethod
#     def work(self): ...

#     @abstractmethod
#     def eat(self): ...


# class HumanWorker(Worker):
#     def work(self):
#         print("Working hard!")

#     def eat(self):
#         print("Having lunch!")


# class RobotWorker(Worker):
#     def work(self):
#         print("Executing tasks")

#     def eat(self):
#         raise NotImplementedError("Robots don't eat!")


# # ‚úÖ –í–æ–ø—Ä–æ—Å 1:
# # –ß—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–æ?
# # –ù–∞—Ä—É—à–µ–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è Worker —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –∫—É—à–∞—Ç—å –∞ –≤–æ—Ç —Ä–æ–±–æ—Ç –Ω–µ—Ç
# # –ö–∞–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–æ–º SOLID? –ü–æ—á–µ–º—É?
# # solId - ISP –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤

# # ‚úÖ –í–æ–ø—Ä–æ—Å 2:
# # –ö–∞–∫ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥, —á—Ç–æ–±—ã —Å–æ–±–ª—é–¥–∞–ª—Å—è ISP?
# from abc import ABC, abstractmethod


# class Workable(ABC):
#     @abstractmethod
#     def work(self): ...


# class Eatable(ABC):
#     @abstractmethod
#     def eat(self): ...


# class HumanWorker(Workable, Eatable):
#     def work(self):
#         print("Working hard!")

#     def eat(self):
#         print("Having lunch!")


# class RobotWorker(Workable):
#     def work(self):
#         print("Executing tasks")
