# üß© –ó–∞–¥–∞—á–∞: –Ω–∞—Ä—É—à–µ–Ω –ª–∏ YAGNI?
# –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞–¥ —Å–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏ –≤ e-commerce. –í–æ—Ç –∫–æ–¥, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–≤–æ–∏–º –∫–æ–ª–ª–µ–≥–æ–π:
# class Order:
#     def __init__(self, id, items):
#         self.id = id
#         self.items = items
#         self.status = "new"

#     def calculate_total(self):
#         return sum(item["price"] * item["quantity"] for item in self.items)

#     def cancel(self):
#         self.status = "cancelled"

#     def print_invoice(self):
#         print("Invoice for order", self.id)
#         for item in self.items:
#             print(f"- {item['name']} x{item['quantity']}")
#         print("Total:", self.calculate_total())

#     def estimate_shipping_date(self):
#         return "3-5 business days"

#     def send_sms_notification(self, message):
#         print(f"Sending SMS to customer: {message}")

#     def generate_gift_wrapping_instructions(self):
#         return "Wrap each item with red ribbon"


# ‚úÖ –í–æ–ø—Ä–æ—Å—ã –∫ —Ç–µ–±–µ:
# –ö–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã —Ç—ã –±—ã –∑–∞–ø–æ–¥–æ–∑—Ä–∏–ª –∫–∞–∫ –Ω–∞—Ä—É—à–µ–Ω–∏–µ YAGNI?
# estimate_shipping_date - send_sms_notification - generate_gift_wrapping_instructions
# –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –æ–Ω–∏?
# –ù—É —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ª–∏—à–Ω–∏–µ –ø–æ—Ç–æ–º—É —á—Ç–æ –≥–ª–∞–≤–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —ç—Ç–æ –≤—ã—á–µ—Å–ª–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
# –∏ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É + —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–º–µ–Ω—É –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ


# –ö–∞–∫ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å —Å —É—á—ë—Ç–æ–º YAGNI?
# class Order:
#     def __init__(self, id, items):
#         self.id = id
#         self.items = items
#         self.status = "new"

#     def calculate_total(self):
#         return sum(item["price"] * item["quantity"] for item in self.items)

#     def cancel(self):
#         self.status = "cancelled"

#     def print_invoice(self):
#         print("Invoice for order", self.id)
#         for item in self.items:
#             print(f"- {item['name']} x{item['quantity']}")
#         print("Total:", self.calculate_total())
